import yargs from "yargs";
import { hideBin } from "yargs/helpers";
import { configure as configureLogging, getLogLevel } from "./logger";
import { run as stackReport } from "./stack-report";
import { LOG_LEVELS } from "./types";

void yargs(hideBin(process.argv))
  .command(
    "overview",
    "list stacks, contained resources, and if generated by @guardian/cdk",
    (yargs) => {
      yargs.option("prefer-cache", {
        type: "boolean",
        description: "use local cache",
      });
      yargs.option("log-level", {
        type: "string",
        description: `define log level (${LOG_LEVELS.join(",")})`,
        choices: LOG_LEVELS,
      });
    },
    (argv) => {
      const preferCache = argv["prefer-cache"] as boolean;
      const logLevel = getLogLevel(argv["log-level"] as string);

      configureLogging(logLevel);

      stackReport(preferCache)
        .then(() => console.log("Done"))
        .catch((err) => {
          console.error(err);
          process.exit(1);
        });
    }
  )

  .parse();
